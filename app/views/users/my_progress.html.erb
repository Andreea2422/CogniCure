<main id="main">
<!--  <div class="my-account-header page-title normal-title">-->
<!--    <div class="page-title-inner flex-row container">-->
<!--      <div class="flex-col flex-grow text-center">-->
<!--        <h1 class="uppercase mb-0">Hi <%#= @user.name %>!</h1>-->
<!--      </div>-->
<!--    </div>-->
<!--  </div>-->

  <div class="main-content-flex mt-0 column-gap-0 w-full">
    <div class="left-flex align-items-stretch flex-grow-1 w-50">

<!--      <div class="main-content-flex mt-0">-->
        <div class="left-flex">

          <% if @last_mood.day.eql?(Date.parse(@today)) %>
            <div>
              <p> Your mood today: <%= @last_mood.name %></p>
            </div>
          <% else %>
            <%= render template: 'moods/new' %>
          <% end %>
        </div>

        <div class="d-inline-block">

            <button class="btn btn-success" id="week">
              By Week
            </button>
            <button class="btn btn-success" id="month">
              By Month
            </button>
            <br>

            <span id="current-date"><%= params[:date] %></span>

            <button class="btn btn-success" id="previous">
              <-
            </button>
            <button class="btn btn-success" id="next">
              ->
            </button>


            <div id="week-chart-figure">
              <%#= line_chart @mood_data_week ,
                   id: 'mood-chart',
                   title: 'Mood Variations',
                   colors:[['#fcf403'],['#30c208'],['#44e019'],['#213291'],['#cf3838'],['#32f22c'],['#fcad03']],
                   xtitle: 'Date',
                   ytitle: 'Mood',
                   label: "Mood",
                   legend: false,
                   dataset: {
                     radius: 10
                   }
              %>
            </div>

            <div id="month-chart-figure" > <!--style="pointer-events: none"-->
              <%#= line_chart @mood_data_month ,
                      # id: 'mood-chart',
                      title: 'Mood Variations',
                      colors:[['#fcf403'],['#30c208'],['#44e019'],['#213291'],['#cf3838'],['#32f22c'],['#fcad03'],['#79fc8f']],
                      xtitle: 'Month',
                      ytitle: 'Mood',
                      label: "Mood",
                      dataset: {
                         radius: 10
                       }
              %>
            </div>

        </div>
<!--      </div>-->

    </div>

    <div class="right-flex flex-grow-1 w-50 justify-content-start">

<!--      <div class="col-md-8">-->
        <%# if @user.moods.any? %>
<!--          <h3>Moods (<%#= @user.moods.count %>)</h3>-->
<!--          <ol class="moods">-->
            <%#= render @all_moods %>
<!--          </ol>-->
        <%# end%>
<!--      </div>-->


      <div class="wrapper" style="background-color: antiquewhite">
<!--        <h1>Letter-like form with inline fields</h1>-->

<!--        <form class="form__contact" action="">-->
<!--          <fieldset>-->
<!--            <p>Hey, Stranger!</p>-->
<!--            <p>My name is <span class="form__field field--name" data-placeholder="your name" tabindex="1" contenteditable></span> and I'm writting tou you since I'm interested in <span class="form__field field--message" data-placeholder="your message" tabindex="2" contenteditable></span>.</p>-->
<!--            <p>This is my <span class="form__field field--email" data-placeholder="email address" tabindex="3" contenteditable></span>.</p>-->
<!--            <p>Hope to get in touch soon. Cheers!</p>-->
<!--            <button type="submit" class="button button--xlarge" tabindex="4">Send message &#187;</button>-->
<!--          </fieldset>-->
<!--        </form>-->

        <%#= edit_mood_path(@last_mood) %>

        <div id="mood-description">
          <% if @last_mood.day.eql?(Date.parse(@today)) %>
            <label>Input feelings:
              <span id="mood-description"><%=  @last_mood.description  %></span>
            </label>
            <button id="edit-button">Edit</button>
          <% else %>
            <p>Please choose a mood </p>
          <%  end %>
        </div>

      </div>


    </div>
  </div>



</main>

<script type="text/javascript" charset="utf-8">

    $(document).ready(function() {
        // Function to fetch the edit form via AJAX
        function fetchEditForm() {
            $.ajax({
                url: '/moods/<%= @last_mood.id %>/edit',
                type: 'GET',
                dataType: 'html',
                success: function(response) {
                    // Replace the original content with the edit form
                    $('#mood-description').html(response);
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching edit form:', error);
                }
            });
        }

        // Event listener for the "Edit" button click
        $('#edit-button').click(function() {
            fetchEditForm();
        });

        // Event listener for the form submission
        $(document).on('submit', '#edit-form', function(event) {
            event.preventDefault(); // Prevent the default form submission
            var formData = $(this).serialize(); // Serialize the form data

            // Send the updated data to the server via AJAX
            $.ajax({
                url: '/moods/<%= @last_mood.id %>',
                type: 'PATCH', // Use PATCH method for updating the resource
                data: formData,
                dataType: 'json',
                success: function(response) {
                    // Update the original content with the updated information
                    $('#mood-description').text(response.description);
                    // Optionally, display a success message or close the edit form
                },
                error: function(xhr, status, error) {
                    console.error('Error updating resource:', error);
                }
            });
        });
    });

  const week = document.getElementById('week');
  const month = document.getElementById('month');

  var on_week = true;
  var on_month = false;

  week.addEventListener('click',changeWeek);
  month.addEventListener('click',changeMonth);

  function changeWeek(){
      console.log('Changed chart to week!');
      on_month = false;
      on_week = true;
      document.getElementById('month-chart-figure').style.display = 'none'
      document.getElementById('week-chart-figure').style.display = 'block'
  }

  function changeMonth(){
      console.log('Changed chart to month!');
      on_week = false;
      on_month = true;
      document.getElementById('week-chart-figure').style.display = 'none'
      document.getElementById('month-chart-figure').style.display = 'block'
  }

  // Define a mapping between mood names and colors
  var moodColors = {
      'Furious' : '#a31d1d',
      'Bitter': '#cf3838',
      'Frustrated': '#f03a3a',
      'Annoyed' : '#ff5757',
      'Depressed': '#213291',
      'Lonely': '#2a44d4',
      'Disappointed' : '#4491e3',
      'Sad': '#58a8fc',
      'Afraid': '#fcad03',
      'Stressed' : '#fccf03',
      'Anxious': '#fcf403',
      'Nervous': '#fafc5d',
      'Relaxed' : '#30c208',
      'Okay': '#44e019',
      'Joyful': '#32f22c',
      'Loved' : '#79fc8f'
  };

  $(document).ready(function() {
      // Get the initial date from the URL parameter
      var currentDate = new Date($('#current-date').text());

      // Function to update the URL with the new date
      function updateURL(newDate) {
          var newURL = window.location.pathname + '?date=' + newDate.toISOString().split('T')[0];
          history.replaceState({}, '', newURL);
      }

      // Handle the "previous" button click
      $('#previous').on('click', function() {
          if (on_week===true){
            currentDate.setDate(currentDate.getDate() - 7);
          } else if (on_month===true){
              // Get the month and year of the current date
              var currentMonth = currentDate.getMonth();
              var currentYear = currentDate.getFullYear();

              // Calculate the month and year of the previous month
              var previousMonth = currentMonth - 1;
              var previousYear = currentYear;

              // Handle the case when the previous month is December (month number 0)
              if (previousMonth === -1) {
                  previousMonth = 11; // Set previousMonth to December (month number 11)
                  previousYear--;     // Decrement the year for the previous month
              }

              currentDate.setFullYear(previousYear, previousMonth, currentDate.getDate())
          }
          $('#current-date').text(currentDate.toISOString().split('T')[0]);
          updateURL(currentDate);
          // Reload the chart with the updated data based on the new date
          // reloadChart();
          getUpdatedChartData();
      });

      // Handle the "next" button click
      $('#next').on('click', function() {
          if (on_week===true){
              currentDate.setDate(currentDate.getDate() + 7);
          } else if (on_month===true){
              // Get the month and year of the current date
              var currentMonth = currentDate.getMonth();
              var currentYear = currentDate.getFullYear();

              // Calculate the month and year of the next month
              var nextMonth = currentMonth + 1;
              var nextYear = currentYear;

              // Handle the case when the next month is January (month number 12)
              if (nextMonth === 12) {
                  nextMonth = 0; // Set nextMonth to January (month number 0)
                  nextYear++;     // Increment the year for the next month
              }

              currentDate.setFullYear(nextYear, nextMonth, currentDate.getDate())
          }
          $('#current-date').text(currentDate.toISOString().split('T')[0]);
          updateURL(currentDate);
          // Reload the chart with the updated data based on the new date
          // reloadChart();

          getUpdatedChartData();
      });

      // Function to make an AJAX request to get the updated chart data
      function getUpdatedChartData() {
          var updatedDate = new Date($('#current-date').text());

          $.ajax({
              type: 'GET',
              url: '/users/<%= params[:id] %>/progress?date=' + updatedDate.toISOString().split('T')[0],
              data: {
                  date: updatedDate.toISOString().split('T')[0] // Pass the current date as a parameter
                  // date: $('#current-date').text() // Pass the current date as a parameter
              },
              dataType: 'json',
              success: function(response) {
                  console.log('success');

                  var mood_data_week = response.mood_data_week;
                  var mood_data_month = response.mood_data_month;

                  var colors_week = mood_data_week.map(function (dataSeries){
                      return moodColors[dataSeries.name] || 'gray';
                  })
                  var colors_month = mood_data_month.map(function (dataSeries){
                      return moodColors[dataSeries.name] || 'gray';
                  })

                  // var customEmptyMessage = '<div class="custom-empty-message">No data available. Please try again later.</div>';


                  // Create a custom empty message element
                  var customEmptyMessage = document.createElement('div');
                  customEmptyMessage.className = 'custom-empty-message';
                  customEmptyMessage.textContent = 'No data available. Please try again later.';

                  // Get the chart container element
                  var chartContainerWeek = document.getElementById('week-chart-figure');
                  var chartContainerMonth = document.getElementById('month-chart-figure');

                  // Clear any existing content in the chart container
                  while (chartContainerWeek.firstChild) {
                      chartContainerWeek.removeChild(chartContainerWeek.firstChild);
                  }
                  while (chartContainerMonth.firstChild) {
                      chartContainerMonth.removeChild(chartContainerMonth.firstChild);
                  }

                  // Update the chart with the new data
                  if (on_week === true) {
                        if(mood_data_week.length > 0) {
                            $('#week-chart-figure').empty();
                            new Chartkick.LineChart('week-chart-figure', mood_data_week,
                                {
                                    id: 'mood-chart',
                                    title: 'Mood Variations',
                                    colors: colors_week,
                                    xtitle: 'Date',
                                    ytitle: 'Mood',
                                    label: "Mood",
                                    // legend: false,
                                    empty: customEmptyMessage,
                                    dataset: {
                                        radius: 10
                                    }
                                })
                        } else {
                              // Data is empty, show the custom empty message
                              chartContainerWeek.appendChild(customEmptyMessage);
                        }
                  } else if (on_month === true) {
                      if (mood_data_month.length > 0) {
                          $('#month-chart-figure').empty();
                          new Chartkick.LineChart('month-chart-figure', mood_data_month,
                              {
                                  id: 'mood-chart',
                                  title: 'Mood Variations',
                                  colors: colors_month,
                                  xtitle: 'Date',
                                  ytitle: 'Mood',
                                  label: "Mood",
                                  empty: customEmptyMessage,
                                  dataset: {
                                      radius: 10
                                  }
                              })
                      } else {
                            // Data is empty, show the custom empty message
                            chartContainerMonth.appendChild(customEmptyMessage);
                      }
                  }
              },
              error: function(xhr, status, error) {
                  console.log(error);
              }
          });
      }


      getUpdatedChartData();

  });


</script>



