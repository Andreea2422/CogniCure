<%= form_with(model: @mood, local: true) do |f| %>
    <div id="app-cover">
      <h1 class="app-title">How was your mood today?</h1>

      <div class="flex justify-content-around">
        <button type="button" class="app-emotions-card" onclick="myRedFunction()"
                style="background-color: red;">
          Angry
        </button>
        <button type="button" class="app-emotions-card" onclick="myBlueFunction()"
                style="background-color: blue;">
          Sad
        </button>
        <button type="button" class="app-emotions-card" onclick="myYellowFunction()"
                style="background-color: yellow;">
          Anxious
        </button>
        <button type="button" class="app-emotions-card" onclick="myGreenFunction()"
                style="background-color: green; margin-right: 0">
          Happy
        </button>
      </div>

      <div id="red" class="hidden">
        <div class="mood" id="mood-furious" data-mood-name="furious">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>furious</span></div>
        </div>
        <div class="mood" id="mood-bitter" data-mood-name="bitter">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>bitter</span></div>
        </div>
        <div class="mood" id="mood-frustrated" data-mood-name="frustrated">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>frustrated</span></div>
        </div>
        <div class="mood" id="mood-annoyed" data-mood-name="annoyed">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>annoyed</span></div>
        </div>
      </div>


      <div id="blue" class="hidden">
        <div class="mood" id="mood-depressed" data-mood-name="depressed">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>depressed</span></div>
        </div>
        <div class="mood" id="mood-lonely" data-mood-name="lonely">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>lonely</span></div>
        </div>
        <div class="mood" id="mood-disappointed" data-mood-name="disappointed">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>disappointed</span></div>
        </div>
        <div class="mood" id="mood-sad" data-mood-name="sad">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>sad</span></div>
        </div>
      </div>

      <div id="yellow" class="hidden">
        <div class="mood" id="mood-afraid" data-mood-name="afraid">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>afraid</span></div>
        </div>
        <div class="mood" id="mood-stressed" data-mood-name="stressed">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>stressed</span></div>
        </div>
        <div class="mood" id="mood-anxious" data-mood-name="anxious">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>anxious</span></div>
        </div>
        <div class="mood" id="mood-nervous" data-mood-name="nervous">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye left"></div>
              <div class="eye right"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>nervous</span></div>
        </div>
      </div>

      <div id="green" class="hidden">
        <div class="mood" id="mood-relaxed" data-mood-name="relaxed">
          <div class="face">
            <div class="eyes-cover">
              <div class="eye"></div>
              <div class="eye"></div>
            </div>
            <div class="mouth"></div>
          </div>
          <div class="mood-name"><span>relaxed</span></div>
        </div>
          <div class="mood" id="mood-okay" data-mood-name="okay">
            <div class="face">
              <div class="eyes-cover">
                <div class="eye"></div>
                <div class="eye"></div>
              </div>
              <div class="mouth"></div>
            </div>
            <div class="mood-name"><span>okay</span></div>
          </div>
          <div class="mood" id="mood-joyful" data-mood-name="joyful">
            <div class="face">
              <div class="eyes-cover">
                <div class="eye"></div>
                <div class="eye"></div>
              </div>
              <div class="mouth"></div>
            </div>
            <div class="mood-name"><span>joyful</span></div>
          </div>
          <div class="mood" id="mood-loved" data-mood-name="loved">
            <div class="face">
              <div class="eyes-cover">
                <div class="eye"></div>
                <div class="eye"></div>
              </div>
              <div class="mouth"></div>
            </div>
            <div class="mood-name"><span>loved</span></div>
          </div>
        </div>

    </div>

  <div style="display: block">
    <%= f.label :name, class: 'title-form' , hidden: true%>
    <%= f.text_field :name, class: 'my-form-control', id: 'name', hidden: true, autocomplete: 'off' %>
  </div>
<% end %>


<script type="text/javascript" charset="UTF-8">
    var inputFieldName = document.getElementById("name");
    var form = document.querySelector('form');
    var red = document.getElementById("red");
    var blue = document.getElementById("blue");
    var yellow = document.getElementById("yellow");
    var green = document.getElementById("green");

    function myRedFunction() {
        if (!blue.classList.contains("hidden")) {
            blue.classList.remove("responsive-flex");
            blue.classList.replace("flex","hidden");
        }
        if(!yellow.classList.contains("hidden")){
            yellow.classList.remove("responsive-flex");
            yellow.classList.replace("flex","hidden");
        }
        if(!green.classList.contains("hidden")){
            green.classList.remove("responsive-flex");
            green.classList.replace("flex","hidden");
        }

        if (red.classList.contains("hidden")) {
            red.classList.replace("hidden","flex");
            red.classList.add("responsive-flex");
        } else {
            red.classList.remove("responsive-flex");
            red.classList.replace("flex","hidden");
        }
    }

    function myBlueFunction() {
        if (!red.classList.contains("hidden")) {
            red.classList.remove("responsive-flex");
            red.classList.replace("flex","hidden");
        }
        if(!yellow.classList.contains("hidden")){
            yellow.classList.remove("responsive-flex");
            yellow.classList.replace("flex","hidden");
        }
        if(!green.classList.contains("hidden")){
            green.classList.remove("responsive-flex");
            green.classList.replace("flex","hidden");
        }

        if (blue.classList.contains("hidden")) {
            blue.classList.replace("hidden","flex");
            blue.classList.add("responsive-flex");
        } else {
            blue.classList.remove("responsive-flex");
            blue.classList.replace("flex","hidden");
        }
    }

    function myYellowFunction() {
        if (!blue.classList.contains("hidden")) {
            blue.classList.remove("responsive-flex");
            blue.classList.replace("flex","hidden");
        }
        if(!red.classList.contains("hidden")){
            red.classList.remove("responsive-flex");
            red.classList.replace("flex","hidden");
        }
        if(!green.classList.contains("hidden")){
            green.classList.remove("responsive-flex");
            green.classList.replace("flex","hidden");
        }

        if (yellow.classList.contains("hidden")) {
            yellow.classList.replace("hidden","flex");
            yellow.classList.add("responsive-flex");
        } else {
            yellow.classList.remove("responsive-flex");
            yellow.classList.replace("flex","hidden");
        }
    }

    function myGreenFunction() {
        if (!blue.classList.contains("hidden")) {
            blue.classList.remove("responsive-flex");
            blue.classList.replace("flex","hidden");
        }
        if(!yellow.classList.contains("hidden")){
            yellow.classList.remove("responsive-flex");
            yellow.classList.replace("flex","hidden");
        }
        if(!red.classList.contains("hidden")){
            red.classList.remove("responsive-flex");
            red.classList.replace("flex","hidden");
        }

        if (green.classList.contains("hidden")) {
            green.classList.replace("hidden","flex");
            green.classList.add("responsive-flex");
        } else {
            green.classList.remove("responsive-flex");
            green.classList.replace("flex","hidden");
        }
    }



    document.addEventListener("DOMContentLoaded", function() {
        var moodButtons = document.querySelectorAll('.mood');


        moodButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                // Extract the ID and name from the button's data attributes
                inputFieldName.value = button.dataset.moodName;

                // form.submit();

                console.log(button.dataset.moodName)

                // Send the POST request using AJAX
                fetch('/moods', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': '<%= form_authenticity_token %>'
                    },
                    body: JSON.stringify({ name: button.dataset.moodName })
                })
                    .then(response => response.json())
                    .then(data => {
                        // Handle the JSON data received from the server
                        if (data.status === 'success') {
                            // Show the success message from the JSON data
                            console.log(data.message);

                            // Reload the page after a short delay (e.g., 0.1 second)
                            setTimeout(function() {
                                location.reload();
                            }, 100); // Change the delay time as needed
                        } else if (data.status === 'error') {
                            // Show an error message or take appropriate action
                            console.log(data.message);
                        }
                    })
                    .catch(error => {
                        // Handle errors
                        console.log('Error: '+ error)
                    });
            });


            });

    });

</script>